def import_libs():
    # Importing the libraries
    global np; import numpy as np
    global plt; import matplotlib.pyplot as plt; plt.style.use('fivethirtyeight')
    global pd; import pandas as pd
    global MinMaxScaler; from sklearn.preprocessing import MinMaxScaler
    global Sequential; from keras.models import Sequential
    global Dense, LSTM, Dropout, GRU, Bidirectional; from keras.layers import Dense, LSTM, Dropout, GRU, Bidirectional
    global SGD; from keras.optimizers import SGD
    global math; import math
    global mean_squared_error; from sklearn.metrics import mean_squared_error
import_libs()
# rcParams


# Some functions to help out with
def plot_predictions(test,predicted):
    plt.plot(test, color='red',label='Real IBM Stock Price')
    plt.plot(predicted, color='blue',label='Predicted IBM Stock Price')
    plt.title('IBM Stock Price Prediction')
    plt.xlabel('Time')
    plt.ylabel('IBM Stock Price')
    plt.legend()
    plt.show()

def return_rmse(test,predicted):
    rmse = math.sqrt(mean_squared_error(test, predicted))
    print("The root mean squared error is {}.".format(rmse))


# First, we get the data
dataset = pd.read_csv('../input/IBM_2006-01-01_to_2018-01-01.csv', index_col='Date', parse_dates=['Date'])
print('Tail of the dataset is: \n\n {}:'.format(dataset.tail()))
